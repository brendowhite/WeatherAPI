# import tkinter as tk

# def process_data():
#     # Get data from Entry widgets
#     api_key = api_key_entry.get()
#     latitude = latitude_entry.get()
#     longitude = longitude_entry.get()

#     # Process the data (e.g., print it)
#     print(f"API Key: {api_key}")
#     print(f"Latitude: {latitude}")
#     print(f"Longitude: {longitude}")

# root = tk.Tk()
# root.geometry("800x600") # sets the window size
# root.title("Live Weather Gathering Module")
# text_area = tk.Text(root)
# text_area.place(x=0, y=0, relwidth=1, relheight=1)

# # Create Entry widgets
# api_key_label = tk.Label(root, text="API Key:")
# api_key_entry = tk.Entry(root)
# latitude_label = tk.Label(root, text="Latitude:")
# latitude_entry = tk.Entry(root)
# longitude_label = tk.Label(root, text="Longitude:")
# longitude_entry = tk.Entry(root)

# # Create a button to trigger data processing
# process_button = tk.Button(root, text="Process Data", command=process_data)

# # Arrange widgets using grid
# api_key_label.grid(row=0, column=0, sticky="e")
# api_key_entry.grid(row=0, column=1)
# latitude_label.grid(row=1, column=0, sticky="e")
# latitude_entry.grid(row=1, column=1)
# longitude_label.grid(row=2, column=0, sticky="e")
# longitude_entry.grid(row=2, column=1)
# process_button.grid(row=3, columnspan=2)

# # Start the event loop
# root.mainloop()

import tkinter as tk

class Page(tk.Frame):
    def __init__(self, *args, **kwargs):
        tk.Frame.__init__(self, *args, **kwargs)
    def show(self):
        self.lift()

class Page1(Page):
    def __init__(self, *args, **kwargs):
        Page.__init__(self, *args, **kwargs)
        label = tk.Label(self, text="Device and API Configuration")
        label.grid(row=0, column=0, columnspan=4, sticky="w")

        # Row 1 Widgets
        latitude_label = tk.Label(self, text="Latitude (-90 <-> +90):")
        latitude_entry = tk.Entry(self)
        device_label = tk.Label(self, text="BACnet Device ID:")
        device_entry = tk.Entry(self)
        latitude_label.grid(row=1, column=0, sticky="w")
        latitude_entry.grid(row=1, column=1, sticky="w")
        device_label.grid(row=1, column=3, sticky="w")
        device_entry.grid(row=1, column=4, sticky="w")

        # Row 2 widgets
        longitude_label = tk.Label(self, text="Longitude (-180 <-> +180):")
        longitude_entry = tk.Entry(self)
        port_label = tk.Label(self, text="Port ID:")
        port_entry = tk.Entry(self)
        longitude_label.grid(row=2, column=0, sticky="w")
        longitude_entry.grid(row=2, column=1)
        port_label.grid(row=2, column=3, sticky="w")
        port_entry.grid(row=2, column=4, sticky="w")
        
        # Row 3 widgets
        altitude_label = tk.Label(self, text="Altitude (M)")
        altitude_entry = tk.Entry(self)
        altitude_label.grid(row=3, column=0, sticky="w")
        altitude_entry.grid(row=3, column=1, sticky="w")

        # Row 4 label
        api_heading_label = tk.Label(self, text= "API Sources")
        api_heading_label.grid(row=4, column=0, sticky="w")

        # Open weather widgets (R5)
        openweather_api_label = tk.Label(self, text="Open Weather API:")
        openweather_api_checkbox = tk.Checkbutton(self)
        api_key_label = tk.Label(self, text="API Key:")
        api_key_entry = tk.Entry(self)
        openweather_api_label.grid(row=5, column=0, sticky="w")
        openweather_api_checkbox.grid(row=5, column=1, sticky="w")
        api_key_label.grid(row=5, column=2, sticky="w")
        api_key_entry.grid(row=5, column=3, sticky="w")

        # Row 6 widgets
        api2_label = tk.Label(self, text="API Src 2:")
        api2_checkbox = tk.Checkbutton(self)
        api2_entry = tk.Entry(self)
        api2_key_label = tk.Label(self, text="API Key:")
        api2_label.grid(row=6, column=0, sticky="w")
        api2_checkbox.grid(row=6, column=1, sticky="w")
        api2_key_label.grid(row=6, column=2)
        api2_entry.grid(row=6, column=3)

        # Row 7 widgets
        api3_label = tk.Label(self, text="API Src 3:")
        api3_checkbox = tk.Checkbutton(self)
        api3_entry = tk.Entry(self)
        api3_key_label = tk.Label(self, text="API Key:")
        api3_label.grid(row=7, column=0, sticky="w")
        api3_checkbox.grid(row=7, column=1, sticky="w")
        api3_key_label.grid(row=7, column=2)
        api3_entry.grid(row=7, column=3)

class Page2(Page):
   def __init__(self, *args, **kwargs):
       Page.__init__(self, *args, **kwargs)
       label = tk.Label(self, text="This is page 2")
       label.pack(side="top", fill="both", expand=True)

class Page3(Page):
   def __init__(self, *args, **kwargs):
       Page.__init__(self, *args, **kwargs)
       label = tk.Label(self, text="This is page 3")
       label.pack(side="top", fill="both", expand=True)

class Page4(Page):
   def __init__(self, *args, **kwargs):
       Page.__init__(self, *args, **kwargs)
       label = tk.Label(self, text="This is page 4")
       label.pack(side="top", fill="both", expand=True)

class MainView(tk.Frame):
    def __init__(self, *args, **kwargs):
        tk.Frame.__init__(self, *args, **kwargs)
        p1 = Page1(self)
        p2 = Page2(self)
        p3 = Page3(self)
        p4 = Page4(self)

        buttonframe = tk.Frame(self)
        container = tk.Frame(self)
        buttonframe.pack(side="top", fill="x", expand=False)
        container.pack(side="top", fill="both", expand=True)

        p1.place(in_=container, x=0, y=0, relwidth=1, relheight=1)
        p2.place(in_=container, x=0, y=0, relwidth=1, relheight=1)
        p3.place(in_=container, x=0, y=0, relwidth=1, relheight=1)
        p4.place(in_=container, x=0, y=0, relwidth=1, relheight=1)

        b1 = tk.Button(buttonframe, text="Configuration", command=p1.show)
        b2 = tk.Button(buttonframe, text="Source 1: Open Weather", command=p2.show)
        b3 = tk.Button(buttonframe, text="Source 2: Placeholder", command=p3.show)
        b4 = tk.Button(buttonframe, text="Source 3: Placeholder", command=p4.show)


        b1.pack(side="left")
        b2.pack(side="left")
        b3.pack(side="left")
        b4.pack(side="left")

        p1.show()

if __name__ == "__main__":
    root = tk.Tk()
    main = MainView(root)
    main.pack(side="top", fill="both", expand=True)
    root.geometry("550x400")
    root.title("Weather API Fetching Virtual BACnet Device")
    root.mainloop()



